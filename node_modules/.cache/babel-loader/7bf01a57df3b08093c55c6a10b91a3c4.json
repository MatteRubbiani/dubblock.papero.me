{"remainingRequest":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\components\\gameComponents\\gameSceneComponents\\GameGrid.vue?vue&type=template&id=9af1fec6&scoped=true","dependencies":[{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\components\\gameComponents\\gameSceneComponents\\GameGrid.vue","mtime":1621232639759},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1616796459000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgeyByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi05YWYxZmVjNiIpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfR2FtZUdyaWRCbG9jayA9IF9yZXNvbHZlQ29tcG9uZW50KCJHYW1lR3JpZEJsb2NrIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgY2xhc3M6ICJnYW1lLWdyaWRfd3JhcHBlciIsCiAgICBzdHlsZTogJG9wdGlvbnMuc3R5bGUKICB9LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRvcHRpb25zLmJsb2NrcywgZnVuY3Rpb24gKGkpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0dhbWVHcmlkQmxvY2ssIHsKICAgICAga2V5OiBpLAogICAgICByb3c6IGkucm93LAogICAgICBjb2x1bW46IGkuY29sdW1uLAogICAgICBzaGFwZXM6IGkuc2hhcGVzLAogICAgICBjb2xvcnM6IGkuY29sb3JzLAogICAgICB5b3U6IGkueW91LAogICAgICBvYnN0YWNsZTogaS5vYnN0YWNsZSwKICAgICAgc2VsZWN0ZWRQYXduOiBpLnNlbGVjdGVkUGF3biwKICAgICAgc2VsZWN0ZWRPYnN0YWNsZTogaS5zZWxlY3RlZE9ic3RhY2xlLAogICAgICBhdmFpbGFibGVQYXduTW92ZTogJG9wdGlvbnMuYXZhaWxhYmxlUGF3bk1vdmVCbG9ja3MuaW5jbHVkZXMoaS5yb3cgKyAnLCcgKyBpLmNvbHVtbiksCiAgICAgIG9ic3RhY2xlQXZhaWxhYmxlOiAkb3B0aW9ucy5vYnN0YWNsZXNBdmFpbGFibGUsCiAgICAgIG9uU2VsZWN0UGF3bjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLnNlbGVjdE5ld1Bhd24oJGV2ZW50KTsKICAgICAgfSksCiAgICAgIG9uU2VsZWN0T2JzdGFjbGU6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy5zZWxlY3ROZXdPYnN0YWNsZSgkZXZlbnQpOwogICAgICB9KSwKICAgICAgb25Nb3ZlUGF3bjogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLm1vdmVQYXduKCRldmVudFswXSwgJGV2ZW50WzFdKTsKICAgICAgfSkKICAgIH0sIG51bGwsIDgsIFsicm93IiwgImNvbHVtbiIsICJzaGFwZXMiLCAiY29sb3JzIiwgInlvdSIsICJvYnN0YWNsZSIsICJzZWxlY3RlZFBhd24iLCAic2VsZWN0ZWRPYnN0YWNsZSIsICJhdmFpbGFibGVQYXduTW92ZSIsICJvYnN0YWNsZUF2YWlsYWJsZSJdKTsKICB9KSwgMTI4KSldLCA0KTsKfSk7"},{"version":3,"sources":["C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\components\\gameComponents\\gameSceneComponents\\GameGrid.vue"],"names":[],"mappings":";;;;;;;;;uBACA,YAAA,CAgBM,KAhBN,EAgBM;AAhBD,IAAA,KAAK,EAAC,mBAgBL;AAhB0B,IAAA,KAAK,EAAE,QAAA,CAAA;AAgBjC,GAhBN,E,oBACE,YAAA,CAciB,SAdjB,EAciB,IAdjB,EAciB,WAAA,CAdU,QAAA,CAAA,MAcV,EAdgB,UAAX,CAAW,EAAV;yBAAvB,YAAA,CAciB,wBAdjB,EAciB;AAdmB,MAAA,GAAG,EAAE,CAcxB;AAbD,MAAA,GAAG,EAAC,CAAC,CAAC,GAaL;AAZD,MAAA,MAAM,EAAC,CAAC,CAAC,MAYR;AAXD,MAAA,MAAM,EAAE,CAAC,CAAC,MAWT;AAVD,MAAA,MAAM,EAAE,CAAC,CAAC,MAUT;AATD,MAAA,GAAG,EAAE,CAAC,CAAC,GASN;AARD,MAAA,QAAQ,EAAE,CAAC,CAAC,QAQX;AAPD,MAAA,YAAY,EAAE,CAAC,CAAC,YAOf;AAND,MAAA,gBAAgB,EAAE,CAAC,CAAC,gBAMnB;AALD,MAAA,iBAAiB,EAAE,QAAA,CAAA,uBAAA,CAAwB,QAAxB,CAAiC,CAAC,CAAC,GAAF,GAAK,GAAL,GAAc,CAAC,CAAC,MAAjD,CAKlB;AAJD,MAAA,iBAAiB,EAAE,QAAA,CAAA,kBAIlB;AAHD,MAAA,YAAU,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,eAAE,QAAA,CAAA,aAAA,CAAc,MAAd,CAAF;AAAA,OAAA,CAGT;AAFD,MAAA,gBAAc,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,eAAE,QAAA,CAAA,iBAAA,CAAkB,MAAlB,CAAF;AAAA,OAAA,CAEb;AADD,MAAA,UAAQ,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,eAAE,QAAA,CAAA,QAAA,CAAS,MAAM,CAAA,CAAA,CAAf,EAAoB,MAAM,CAAA,CAAA,CAA1B,CAAF;AAAA,OAAA;AACP,KAdjB,E,IAAA,E,CAAA,E,sIAAA,C;GAciB,CAdjB,E,GAAA,C,EADF,E,CAAA,C","sourcesContent":["<template>\r\n<div class=\"game-grid_wrapper\" :style=\"style\">\r\n  <GameGridBlock v-for=\"i in blocks\" :key=\"i\"\r\n                 :row=i.row\r\n                 :column=i.column\r\n                 :shapes=\"i.shapes\"\r\n                 :colors=\"i.colors\"\r\n                 :you=\"i.you\"\r\n                 :obstacle=\"i.obstacle\"\r\n                 :selectedPawn=\"i.selectedPawn\"\r\n                 :selectedObstacle=\"i.selectedObstacle\"\r\n                 :availablePawnMove=\"availablePawnMoveBlocks.includes(i.row + ',' + i.column)\"\r\n                 :obstacleAvailable=\"obstaclesAvailable\"\r\n                 @selectPawn=\"selectNewPawn($event)\"\r\n                 @selectObstacle=\"selectNewObstacle($event)\"\r\n                 @movePawn=\"movePawn($event[0], $event[1])\"\r\n  ></GameGridBlock>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport GameGridBlock from \"./GameGridBlock\";\r\nimport websocketEvents from \"../../../constants/websocketEvents\";\r\nexport default {\r\n  name: \"GameGrid\",\r\n  components: {GameGridBlock},\r\n  props:{\r\n    game: Object,\r\n    socket:Object\r\n  },\r\n  data(){\r\n    return {\r\n      blockSize: 10,\r\n      selectedPawn: {row: null, column: null},\r\n      selectedObstacle: {row: null, column: null}\r\n    }\r\n  },\r\n  computed: {\r\n    style: function (){\r\n      return {\r\n        'width': this.blockSize * this.game.settings.columns + 'px',\r\n        'height': this.blockSize * this.game.settings.rows + 'px',\r\n        'grid-template-columns': 'repeat(' + this.game.settings.columns + ',' + 100/this.game.settings.columns + '%)',\r\n        'grid-template-rows': 'repeat(' + this.game.settings.rows + ',' + 100/this.game.settings.rows + '%)'\r\n\r\n      }\r\n    },\r\n    blocks: function (){\r\n      let b = []\r\n      for (let r=0; r<this.game.settings.rows; r++){\r\n        for (let c=0; c<this.game.settings.columns; c++){\r\n          let colors = []\r\n          let shapes = []\r\n          let you = false\r\n          this.game.players.forEach(player => {\r\n            if (player.row === r && player.column === c) {\r\n              colors.push(player.color)\r\n              shapes.push(player.shape)\r\n              if (player.localId === this.game.localId) you = true\r\n            }\r\n          })\r\n          let obstacle = false\r\n          this.game.obstacles.forEach(o => {\r\n            if (o.row === r && o.column === c) obstacle = true\r\n          })\r\n          b.push({\r\n            row: r,\r\n            column: c,\r\n            colors: colors,\r\n            shapes: shapes,\r\n            you: you,\r\n            obstacle: obstacle,\r\n            selectedPawn: (this.selectedPawn.row === r && this.selectedPawn.column === c),\r\n            selectedObstacle: (this.selectedObstacle.row === r && this.selectedObstacle.column === c)\r\n          })\r\n        }\r\n      }\r\n      return b\r\n    },\r\n    availablePawnMoveBlocks: function (){\r\n      if (this.selectedPawn.row===null || this.selectedPawn.column===null) return []\r\n      let av = []\r\n      for (let c = 0; c < this.game.settings.columns; c++) {\r\n        if (this.selectedPawn.column !== c) {\r\n          av.push(this.selectedPawn.row + \",\" + c)\r\n        }\r\n      }\r\n      let nextAvailable = true\r\n      this.game.obstacles.forEach(o => {\r\n        if (o.row === this.selectedPawn.row && o.column === this.selectedPawn.column) nextAvailable = false\r\n      })\r\n      if (nextAvailable){\r\n        av.push(\r\n            (this.selectedPawn.row + 1) + \",\" + this.selectedPawn.column\r\n        )\r\n      }\r\n      //controlla se puo andare alla fine...\r\n      return av\r\n\r\n    },\r\n    obstaclesAvailable: function (){\r\n      if (this.selectedObstacle.row === null || this.selectedObstacle.column === null) return false\r\n      return true\r\n    },\r\n    playing: function (){\r\n      let playing = false\r\n      this.game.players.forEach(p => {\r\n        if (p.localId === this.game.localId && p.playing){\r\n          playing = true\r\n        }\r\n      })\r\n      return playing\r\n    }\r\n  },\r\n  methods: {\r\n    setSize: function (){\r\n      let blockHeight = document.getElementById(\"board-container\").clientHeight / this.game.settings.rows\r\n      let blockWidth = document.getElementById(\"board-container\").clientWidth / (this.game.settings.columns+1)\r\n      this.blockSize = blockHeight > blockWidth ? parseInt(blockWidth) : parseInt(blockHeight)\r\n    },\r\n    selectNewPawn(pawn){\r\n      this.selectedObstacle.row = null; this.selectedObstacle.column = null\r\n      if (!this.playing) return null\r\n      this.selectedPawn.row =pawn[0]; this.selectedPawn.column = pawn[1]\r\n    },\r\n    selectNewObstacle(obstacle){\r\n      this.selectedPawn.row = null; this.selectedPawn.column = null\r\n      if (!this.playing) return null\r\n      this.selectedObstacle.row = obstacle[0]; this.selectedObstacle.column = obstacle[1]\r\n    },\r\n    movePawn(row, column){\r\n      this.socket.emit(websocketEvents.MOVE_PAWN, {row: row, column: column})\r\n      console.log(\"move to row: \", row, \" column: \", column)\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    this.setSize()\r\n    window.addEventListener('resize', ()=>{\r\n        this.setSize()\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.game-grid_wrapper{\r\n  display: grid;\r\n  margin: auto;\r\n  user-select: none;\r\n  //grid-column-gap: 1px;\r\n  grid-gap: 1px;\r\n}\r\n</style>"],"sourceRoot":""}]}