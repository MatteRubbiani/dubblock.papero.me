{"remainingRequest":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\components\\gameComponents\\gameSceneComponents\\RowIndicator.vue?vue&type=style&index=0&id=f7a8b61e&scoped=true&lang=scss","dependencies":[{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\components\\gameComponents\\gameSceneComponents\\RowIndicator.vue","mtime":1621333804310},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1616796459000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucm93LWluZGljYXRvcl93cmFwcGVyew0KICBkaXNwbGF5OiBncmlkOw0KICBtYXJnaW46IGF1dG87DQogIHBhZGRpbmctbGVmdDogNCU7DQogIGdyaWQtZ2FwOiAxcHg7DQogIEBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkgew0KICAgIG1hcmdpbjogMCBhdXRvOw0KICB9DQp9DQo="},{"version":3,"sources":["C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\components\\gameComponents\\gameSceneComponents\\RowIndicator.vue"],"names":[],"mappings":";AAgEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB;AACF","file":"C:/Users/matte/Desktop/papero/dubblock.papero.me/src/components/gameComponents/gameSceneComponents/RowIndicator.vue","sourceRoot":"","sourcesContent":["<template>\r\n<div class=\"row-indicator_wrapper\" :style=\"style\">\r\n<IndicatorBlock v-for=\"i in indicatorList\" :key=\"i\" :players=\"i\"></IndicatorBlock>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport IndicatorBlock from \"./IndicatorBlock\";\r\nexport default {\r\n  name: \"RowIndicator\",\r\n  components: {IndicatorBlock},\r\n  props: {\r\n    game: Object\r\n  },\r\n  data(){\r\n    return {\r\n      blockSize: 10\r\n    }\r\n  },\r\n  computed: {\r\n    style: function () {\r\n      return {\r\n        'width': this.blockSize + 'px',\r\n        'height': this.blockSize * this.game.settings.rows + 'px',\r\n        'grid-template-columns': '100%',\r\n        'grid-template-rows': 'repeat(' + this.game.settings.rows + ',' + 100 / this.game.settings.rows + '%)'\r\n\r\n      }\r\n    },\r\n    indicatorList: function (){\r\n      let iL = []\r\n      for (let i=0; i<this.game.settings.rows; i++){\r\n        let pls = []\r\n        this.game.players.forEach(p => {\r\n          if (p.row === i && p.column === null){ //controllo che non sia visibile senno sarebbe un doppione\r\n            pls.push({\r\n              shape: p.shape,\r\n              color: p.color\r\n            })\r\n          }\r\n        })\r\n        iL.push(pls)\r\n      }\r\n      console.log(iL)\r\n      return iL\r\n    }\r\n  },\r\n  methods: {\r\n    setSize: function (){\r\n      let blockHeight = document.getElementById(\"board-container\").clientHeight / this.game.settings.rows\r\n      let blockWidth = document.getElementById(\"board-container\").clientWidth / (this.game.settings.columns+1)\r\n      this.blockSize = blockHeight > blockWidth ? parseInt(blockWidth) : parseInt(blockHeight)\r\n    },\r\n  },\r\n  mounted() {\r\n    this.setSize()\r\n    window.addEventListener('resize', ()=>{\r\n      this.setSize()\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.row-indicator_wrapper{\r\n  display: grid;\r\n  margin: auto;\r\n  padding-left: 4%;\r\n  grid-gap: 1px;\r\n  @media (max-width: 700px) {\r\n    margin: 0 auto;\r\n  }\r\n}\r\n</style>"]}]}