{"remainingRequest":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\views\\Game.vue?vue&type=style&index=0&id=f9dc289e&scoped=true&lang=scss","dependencies":[{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\views\\Game.vue","mtime":1621935332047},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1616796459000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQp0ZW1wbGF0ZXsNCiAgaGVpZ2h0OiAxMDAlOw0KfQ0KDQo="},{"version":3,"sources":["C:\\Users\\matte\\Desktop\\papero\\dubblock.papero.me\\src\\views\\Game.vue"],"names":[],"mappings":";AA2GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd","file":"C:/Users/matte/Desktop/papero/dubblock.papero.me/src/views/Game.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <UserHamburgerMenu :show=\"showHamburgerMenu\"\r\n                   :src=\"require('@/assets/hamburger_icon_dark.png')\"\r\n                   @toggle-show=\"showHamburgerMenu=$event\"/>\r\n  <Lobby v-if=\"socket  && status === 0\" :gameId=\"gameId\" :socket=\"socket\" :game=\"game\"></Lobby>\r\n  <GameScene  v-if=\"socket  && status === 1\" :game=\"game\" :socket=\"socket\" ></GameScene>\r\n  <Loading v-if=\"!socket || status === null\"></Loading>\r\n</template>\r\n\r\n\r\n<script>\r\nimport io from \"socket.io-client\";\r\n\r\nimport UserHamburgerMenu from \"../components/UserHamburgerMenu\";\r\nimport Lobby from \"../components/gameComponents/Lobby\";\r\nimport GameScene from \"../components/gameComponents/GameScene\";\r\nimport {urls} from \"../constants/constants\";\r\nimport websocketEvents from \"../constants/websocketEvents\";\r\nimport Loading from \"../components/Loading\";\r\nimport axios from \"axios\";\r\nimport store from \"../store\";\r\n\r\nexport default {\r\n  name: \"Game\",\r\n  components: {Loading, GameScene, Lobby, UserHamburgerMenu},\r\n  data() {\r\n    return {\r\n      socket: null,\r\n      showHamburgerMenu: false,\r\n      game: null,\r\n      status: null //TODO: change\r\n    }\r\n    /*return {\r\n      socket: 1,\r\n      showHamburgerMenu: false,\r\n      game: game,\r\n      status: 1 //TODO: change\r\n    }*/\r\n  },\r\n  computed: {\r\n    gameId: function (){\r\n      return this.$route.params.gameId;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.socket = io(urls.baseUrl, {\r\n      path: urls.socketPath,\r\n      autoConnect: true\r\n    })\r\n\r\n    this.socket.on(\"connect\", () => {\r\n      this.socket.emit(websocketEvents.CONNECT_TO_GAME, {gameId: this.gameId});\r\n    })\r\n\r\n    this.socket.on(websocketEvents.LOBBY_MODIFIED, data => {\r\n      console.log(data)\r\n      this.status = data.status\r\n      this.game = data\r\n    })\r\n\r\n    this.socket.on(websocketEvents.GAME_MODIFIED, data => {\r\n      this.game = data\r\n      console.log(data)\r\n      this.status = data.status\r\n    })\r\n  },\r\n  beforeRouteEnter(to, from, next){\r\n    //next();\r\n    const createLocalAccount = ()=>{\r\n      axios\r\n          .get(urls.createLocalAccountUrl)\r\n          .then((response) => {\r\n            store.dispatch(\"setUsername\", response.data.username);\r\n            store.dispatch(\"setLogged\", false);\r\n            next();\r\n          })\r\n          .catch(() => {\r\n            location.href = location.origin+\"/error?from=\"+location.pathname;\r\n          });\r\n    }\r\n    if(store.state.username === \"\" && store.state.logged === -1) { //se non è ancora stato trovato il logged\r\n      axios\r\n          .get(urls.getLoginInfoUrl)\r\n          .then((response) => {\r\n            if (response.data) { //se è loggato in qualche modo\r\n              store.dispatch(\"setLogged\", response.data.google_signed_in);\r\n              store.dispatch(\"setUsername\", decodeURIComponent(response.data.username));\r\n\r\n              next(); //se è loggato in qualche modo può andare dove vuole\r\n\r\n            } else { //se non è loggato\r\n              createLocalAccount();\r\n            }\r\n          })\r\n          .catch(() => {\r\n            location.href = location.origin+\"/error?from=\"+location.pathname;\r\n          });\r\n    } else {\r\n      if(store.state.username === null){ //se non è loggato\r\n        createLocalAccount();\r\n      } else next(); //se è loggato\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\ntemplate{\r\n  height: 100%;\r\n}\r\n\r\n</style>"]}]}